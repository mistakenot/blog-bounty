@model BlogBounty.Models.TopicViewModels.NewTopicRequest

@{
    ViewBag.Title = "New topic suggestion";
    Layout = "_Layout";
}

<h2>New topic suggestion</h2>
<div class="row">
    <div class="col-md-8">
        <form asp-controller="Topic" asp-action="New" method="post" class="form-horizontal">
            <h4>Create a new Blog Topic suggestion</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="Title" class="form-control" id="Filter"/>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Tags" class="col-md-2 control-label"></label>
                <input asp-for="Tags" type="hidden" data-bind="value: allTags"/>
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button" data-bind="click: addTag">+</button>
                        </span>
                        <input type="text" class="form-control" data-bind="value: currentTag" placeholder="Choose at least 1 tag." id="CurrentTag"/>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <div data-bind="foreach: tags">
                        <span class="label label-default">
                            <a href="#" data-bind="click: remove" style="color: white">x</a>
                            <span data-bind="text: value"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default">Create</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts {
<script>
    $("#Filter").typeahead({
        onSelect: function (item) {
            window.location.href = item.value;
        },
        ajax: {
            url: "/Search/Suggestion",
            timeout: 250,
            displayField: "title",
            valueField: "url",
            triggerLength: 1,
            method: "get",
            loadingClass: "loading-circle",
            preDispatch: function (query) {
                return {
                    filter: query
                }
            }
        }
    })
    
    function TagViewModel(value, onRemove) {
        var self = this;
        this.value = value;
        this.onRemove = onRemove;

        this.remove = function () {
            self.onRemove(value);
        }
    }

    function TagsViewModel() {
        var self = this;
        var newTag = (value) => new TagViewModel(value, v => self.removeTag(v));

        this.tags = ko.observableArray([newTag("test")]);
        this.currentTag = ko.observable("");
        this.add = function (value) {
            var current = self.tags();
            var newVals = current.concat(newTag(value));
            var unique = _.uniqBy(newVals, v => v.value);
            self.tags(unique);
            self.currentTag("");
        }
        this.addTag = function () {
            var value = self.currentTag();
            self.add(value);
        }
        this.removeTag = function (tag) {
            var next = _.filter(self.tags(), v => v.value != tag);
            self.tags(next);
        }
        this.allTags = ko.computed(() => {
            var tags = self.tags().map(t => t.value);
            return _.join(tags, " ");
        })
    }

    var model = new TagsViewModel();

    $("#CurrentTag").typeahead({
        onSelect: function (item) {
            model.add(item.text);
        },
        ajax: {
            url: "/Search/Tags",
            timeout: 250,
            displayField: "value",
            triggerLength: 1,
            method: "get",
            loadingClass: "loading-circle",
            preDispatch: function (query) {
                return {
                    filter: query
                }
            },
            preProcessing: function(item) {
                console.log(item);
            }
        }

    })

    ko.applyBindings(model);
</script>
}